package top.simba1949.webservice.impl;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;
import top.simba1949.webservice.HelloWorldService;

/**
 * This class was generated by Apache CXF 3.2.4
 * 2018-05-17T13:43:20.557+08:00
 * Generated source version: 3.2.4
 *
 */
@WebServiceClient(name = "/HelloWorldService",
                  wsdlLocation = "http://localhost:8888/ws/HelloWorldService?wsdl",
                  targetNamespace = "http://impl.webservice.simba1949.top")
public class _002fHelloWorldService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://impl.webservice.simba1949.top", "/HelloWorldService");
    public final static QName HelloWorldServiceImplPort = new QName("http://impl.webservice.simba1949.top", "HelloWorldServiceImplPort");
    static {
        URL url = null;
        try {
            url = new URL("http://localhost:8888/ws/HelloWorldService?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(_002fHelloWorldService.class.getName())
                .log(java.util.logging.Level.INFO,
                     "Can not initialize the default wsdl from {0}", "http://localhost:8888/ws/HelloWorldService?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public _002fHelloWorldService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public _002fHelloWorldService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public _002fHelloWorldService() {
        super(WSDL_LOCATION, SERVICE);
    }

    public _002fHelloWorldService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public _002fHelloWorldService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public _002fHelloWorldService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }




    /**
     *
     * @return
     *     returns HelloWorldService
     */
    @WebEndpoint(name = "HelloWorldServiceImplPort")
    public HelloWorldService getHelloWorldServiceImplPort() {
        return super.getPort(HelloWorldServiceImplPort, HelloWorldService.class);
    }

    /**
     *
     * @param features
     *     A list of {@link WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns HelloWorldService
     */
    @WebEndpoint(name = "HelloWorldServiceImplPort")
    public HelloWorldService getHelloWorldServiceImplPort(WebServiceFeature... features) {
        return super.getPort(HelloWorldServiceImplPort, HelloWorldService.class, features);
    }

}
